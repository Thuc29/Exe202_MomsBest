import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { Link } from "react-router-dom";
import {
  Search,
  MessageSquare,
  PlusCircle,
  Calendar,
  Heart,
  Share2,
  BookmarkPlus,
  MessageCircle,
  Filter,
  TrendingUp,
  Clock,
  Eye,
} from "lucide-react";

// Mock data for forum categories
const categories = [
  {
    id: "1",
    name: "S·ª©c kh·ªèe ti·ªÅn s·∫£n",
    icon: "ü§∞",
    description: "Th·∫£o lu·∫≠n v·ªÅ s·ª©c kh·ªèe tr∆∞·ªõc khi mang thai",
    threads: 124,
    color: "bg-pink-100 text-pink-600",
  },
  {
    id: "2",
    name: "Thai k·ª≥ 3 th√°ng ƒë·∫ßu",
    icon: "üå±",
    description: "Chia s·∫ª kinh nghi·ªám v√† th·∫Øc m·∫Øc v·ªÅ 3 th√°ng ƒë·∫ßu thai k·ª≥",
    threads: 256,
    color: "bg-blue-100 text-blue-600",
  },
  {
    id: "3",
    name: "Thai k·ª≥ 3 th√°ng gi·ªØa",
    icon: "üåø",
    description: "M·ªçi v·∫•n ƒë·ªÅ li√™n quan ƒë·∫øn 3 th√°ng gi·ªØa thai k·ª≥",
    threads: 189,
    color: "bg-green-100 text-green-600",
  },
  {
    id: "4",
    name: "Thai k·ª≥ 3 th√°ng cu·ªëi",
    icon: "üå≥",
    description: "Chu·∫©n b·ªã cho sinh n·ªü v√† c√°c v·∫•n ƒë·ªÅ 3 th√°ng cu·ªëi",
    threads: 210,
    color: "bg-purple-100 text-purple-600",
  },
  {
    id: "5",
    name: "ChƒÉm s√≥c s∆° sinh",
    icon: "üë∂",
    description: "M·ªçi ƒëi·ªÅu v·ªÅ chƒÉm s√≥c b√© trong nh·ªØng th√°ng ƒë·∫ßu ƒë·ªùi",
    threads: 315,
    color: "bg-yellow-100 text-yellow-600",
  },
  {
    id: "6",
    name: "Nu√¥i con b·∫±ng s·ªØa m·∫π",
    icon: "üçº",
    description: "Chia s·∫ª kinh nghi·ªám v√† kh√≥ khƒÉn khi cho con b√∫",
    threads: 276,
    color: "bg-indigo-100 text-indigo-600",
  },
  {
    id: "7",
    name: "S·ª©c kh·ªèe tinh th·∫ßn m·∫π",
    icon: "üß†",
    description: "Th·∫£o lu·∫≠n v·ªÅ c√°c v·∫•n ƒë·ªÅ t√¢m l√Ω sau sinh v√† c√°ch ƒë·ªëi ph√≥",
    threads: 142,
    color: "bg-red-100 text-red-600",
  },
  {
    id: "8",
    name: "Dinh d∆∞·ª°ng m·∫π v√† b√©",
    icon: "ü•ó",
    description: "Chia s·∫ª ki·∫øn th·ª©c v·ªÅ ch·∫ø ƒë·ªô ƒÉn u·ªëng cho m·∫π v√† b√©",
    threads: 198,
    color: "bg-emerald-100 text-emerald-600",
  },
];

// Mock data for forum threads/posts
const threads = [
  {
    id: "1",
    title: "L√†m th·∫ø n√†o ƒë·ªÉ gi·∫£m ngh√©n trong 3 th√°ng ƒë·∫ßu?",
    content:
      "M√¨nh ƒëang mang thai th√°ng th·ª© 2 v√† b·ªã ngh√©n kh√° n·∫∑ng, ƒÉn g√¨ c≈©ng n√¥n. C√°c m·∫π c√≥ kinh nghi·ªám g√¨ ƒë·ªÉ chia s·∫ª kh√¥ng ·∫°?",
    category: "Thai k·ª≥ 3 th√°ng ƒë·∫ßu",
    author: {
      name: "HongNhung",
      avatar:
        "https://images.unsplash.com/photo-1494790108377-be9c29b29330?auto=format&fit=crop&w=120",
    },
    createdAt: "2025-05-18T08:30:00",
    views: 356,
    likes: 42,
    comments: 23,
    isPinned: true,
  },
  {
    id: "2",
    title: "Ch·∫ø ƒë·ªô dinh d∆∞·ª°ng cho b√† b·∫ßu 3 th√°ng cu·ªëi",
    content:
      "M√¨nh ƒëang th√°ng th·ª© 7 v√† mu·ªën t√¨m hi·ªÉu v·ªÅ ch·∫ø ƒë·ªô dinh d∆∞·ª°ng ph√π h·ª£p ƒë·ªÉ con ph√°t tri·ªÉn t·ªët trong giai ƒëo·∫°n cu·ªëi. Ai c√≥ ki·∫øn th·ª©c chia s·∫ª gi√∫p m√¨nh v·ªõi?",
    category: "Thai k·ª≥ 3 th√°ng cu·ªëi",
    author: {
      name: "ThuyLinh84",
      avatar:
        "https://images.unsplash.com/photo-1438761681033-6461ffad8d80?auto=format&fit=crop&w=120",
    },
    createdAt: "2025-05-17T14:45:00",
    views: 289,
    likes: 31,
    comments: 18,
    isPinned: false,
  },
  {
    id: "3",
    title: "B√© 2 th√°ng tu·ªïi hay qu·∫•y kh√≥c v·ªÅ ƒë√™m",
    content:
      "Con m√¨nh 2 th√°ng tu·ªïi, g·∫ßn ƒë√¢y hay qu·∫•y kh√≥c v√†o ban ƒë√™m, ƒë·∫∑c bi·ªát l√† t·ª´ 11h ƒë·∫øn 2h s√°ng. M√¨nh ƒë√£ th·ª≠ nhi·ªÅu c√°ch nh∆∞ng kh√¥ng hi·ªáu qu·∫£. C√°c m·∫π c√≥ kinh nghi·ªám g√¨ kh√¥ng ·∫°?",
    category: "ChƒÉm s√≥c s∆° sinh",
    author: {
      name: "NgaMai",
      avatar:
        "https://images.unsplash.com/photo-1544005313-94ddf0286df2?auto=format&fit=crop&w=120",
    },
    createdAt: "2025-05-16T20:15:00",
    views: 412,
    likes: 54,
    comments: 36,
    isPinned: false,
  },
  {
    id: "4",
    title: "D·∫•u hi·ªáu nh·∫≠n bi·∫øt tr·∫ßm c·∫£m sau sinh",
    content:
      "M√¨nh sinh em b√© ƒë∆∞·ª£c 2 th√°ng v√† c·∫£m th·∫•y r·∫•t m·ªát m·ªèi, hay kh√≥c v√† kh√¥ng mu·ªën chƒÉm s√≥c con. M√¨nh kh√¥ng bi·∫øt ƒë√¢y c√≥ ph·∫£i l√† d·∫•u hi·ªáu c·ªßa tr·∫ßm c·∫£m sau sinh kh√¥ng? M·ªçi ng∆∞·ªùi c√≥ ai t·ª´ng tr·∫£i qua kh√¥ng ·∫°?",
    category: "S·ª©c kh·ªèe tinh th·∫ßn m·∫π",
    author: {
      name: "PhuongAnh",
      avatar:
        "https://images.unsplash.com/photo-1554151228-14d9def656e4?auto=format&fit=crop&w=120",
    },
    createdAt: "2025-05-15T09:30:00",
    views: 378,
    likes: 67,
    comments: 42,
    isPinned: true,
  },
  {
    id: "5",
    title: "C√°ch tƒÉng s·ªØa m·∫π hi·ªáu qu·∫£",
    content:
      "M√¨nh ƒëang cho con b√∫ nh∆∞ng l∆∞·ª£ng s·ªØa kh√¥ng ƒë·ªß. M·ªçi ng∆∞·ªùi c√≥ c√°ch n√†o gi√∫p tƒÉng s·ªØa hi·ªáu qu·∫£ kh√¥ng ·∫°?",
    category: "Nu√¥i con b·∫±ng s·ªØa m·∫π",
    author: {
      name: "ThaoTran",
      avatar:
        "https://images.unsplash.com/photo-1546961329-78bef0414d7c?auto=format&fit=crop&w=120",
    },
    createdAt: "2025-05-14T16:20:00",
    views: 521,
    likes: 89,
    comments: 54,
    isPinned: false,
  },
  {
    id: "6",
    title: "Th·ª±c ƒë∆°n dinh d∆∞·ª°ng cho m·∫π sau sinh m·ªï",
    content:
      "M√¨nh v·ª´a sinh m·ªï ƒë∆∞·ª£c 1 tu·∫ßn, c√°c m·∫π c√≥ th·ª±c ƒë∆°n dinh d∆∞·ª°ng n√†o gi√∫p h·ªìi ph·ª•c nhanh v√† c√≥ nhi·ªÅu s·ªØa kh√¥ng ·∫°?",
    category: "Dinh d∆∞·ª°ng m·∫π v√† b√©",
    author: {
      name: "MinhNguyet",
      avatar:
        "https://images.unsplash.com/photo-1499952127939-9bbf5af6c51c?auto=format&fit=crop&w=120",
    },
    createdAt: "2025-05-13T11:40:00",
    views: 345,
    likes: 41,
    comments: 27,
    isPinned: false,
  },
];

// D·ªØ li·ªáu gi·∫£ cho chuy√™n gia h·ªèi ƒë√°p
const experts = [
  {
    id: "1",
    name: "BS. Nguy·ªÖn Th·ªã Minh",
    specialty: "S·∫£n ph·ª• khoa",
    avatar:
      "https://images.unsplash.com/photo-1559839734-2b71ea197ec2?auto=format&fit=crop&w=120",
    experience: "15 nƒÉm kinh nghi·ªám",
  },
  {
    id: "2",
    name: "ThS. Tr·∫ßn VƒÉn Nam",
    specialty: "Dinh d∆∞·ª°ng",
    avatar:
      "https://images.unsplash.com/photo-1612349317150-e413f6a5b16d?auto=format&fit=crop&w=120",
    experience: "10 nƒÉm kinh nghi·ªám",
  },
  {
    id: "3",
    name: "BS. L√™ Th·ªã Hoa",
    specialty: "Nhi khoa",
    avatar:
      "https://images.unsplash.com/photo-1594824476967-48c8b964273f?auto=format&fit=crop&w=120",
    experience: "12 nƒÉm kinh nghi·ªám",
  },
];

const getThreadCount = (categoryName) =>
  threads.filter((thread) => thread.category === categoryName).length;

const Forum = () => {
  const [activeTab, setActiveTab] = useState("categories");
  const [selectedCategory, setSelectedCategory] = useState(null);
  const [searchTerm, setSearchTerm] = useState("");
  const [sortOption, setSortOption] = useState("newest");
  const [showNewThreadModal, setShowNewThreadModal] = useState(false);

  const filteredThreads = threads.filter((thread) => {
    const searchMatch =
      thread.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
      thread.content.toLowerCase().includes(searchTerm.toLowerCase());

    const categoryMatch =
      selectedCategory === null || thread.category === selectedCategory.name;

    return searchMatch && categoryMatch;
  });

  const sortedThreads = [...filteredThreads].sort((a, b) => {
    if (sortOption === "newest") {
      return new Date(b.createdAt) - new Date(a.createdAt);
    } else if (sortOption === "mostViewed") {
      return b.views - a.views;
    } else if (sortOption === "mostCommented") {
      return b.comments - a.comments;
    }
    return 0;
  });

  const formatDate = (dateString) => {
    const date = new Date(dateString);
    return date.toLocaleDateString("vi-VN", {
      day: "numeric",
      month: "numeric",
      year: "numeric",
      hour: "numeric",
      minute: "numeric",
    });
  };

  const cardVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: { opacity: 1, y: 0 },
    exit: { opacity: 0, y: -20 },
  };

  return (
    <div className="min-h-screen bg-cover bg-center bg-[url('https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&w=600')] flex flex-col font-space-grotesk">
      {/* Hero Section */}
      <section className="pt-24 pb-8">
        <div className="container mx-auto px-4">
          <div className="max-w-4xl mx-auto bg-white/80 backdrop-blur-sm rounded-2xl p-6 shadow-xl">
            <h1 className="text-3xl font-bold text-pink-600 text-center mb-4">
              Di·ªÖn ƒë√†n M·∫π v√† B√©
            </h1>
            <p className="text-gray-600 text-center mb-6">
              N∆°i chia s·∫ª kinh nghi·ªám, ƒë·∫∑t c√¢u h·ªèi v√† k·∫øt n·ªëi c·ªông ƒë·ªìng c√°c b√†
              m·∫π
            </p>
            <div className="relative max-w-2xl mx-auto">
              <input
                type="text"
                placeholder="T√¨m ki·∫øm ch·ªß ƒë·ªÅ, b√†i vi·∫øt..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="w-full py-3 px-12 rounded-full bg-white text-gray-800 border border-pink-200 focus:ring-2 focus:ring-pink-300 focus:border-pink-300 outline-none"
              />
              <Search
                className="absolute left-4 top-3.5 text-gray-400"
                size={18}
              />
              <button
                onClick={() => setShowNewThreadModal(true)}
                className="absolute right-2 top-1.5 bg-pink-500 hover:bg-pink-600 text-white px-4 py-1.5 rounded-full flex items-center gap-1.5"
              >
                <PlusCircle size={16} />
                <span>Ch·ªß ƒë·ªÅ m·ªõi</span>
              </button>
            </div>
          </div>
        </div>
      </section>

      {/* Main Content */}
      <section className="py-8 flex-grow">
        <div className="container mx-auto px-4">
          <div className="flex flex-col lg:flex-row gap-8">
            {/* Left Sidebar */}
            <aside className="lg:w-1/4">
              {/* Navigation Tabs */}
              <div className="bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg overflow-hidden mb-6">
                <div className="flex">
                  <button
                    onClick={() => setActiveTab("categories")}
                    className={`flex-1 py-3 text-center font-medium transition ${
                      activeTab === "categories"
                        ? "bg-pink-500 text-white"
                        : "bg-white text-gray-600 hover:bg-pink-50"
                    }`}
                  >
                    Chuy√™n m·ª•c
                  </button>
                  <button
                    onClick={() => setActiveTab("experts")}
                    className={`flex-1 py-3 text-center font-medium transition ${
                      activeTab === "experts"
                        ? "bg-pink-500 text-white"
                        : "bg-white text-gray-600 hover:bg-pink-50"
                    }`}
                  >
                    Chuy√™n gia
                  </button>
                  <Link
                    to="/forum/library"
                    className={`flex-1 py-3 text-center font-medium transition ${
                      window.location.pathname === "/library"
                        ? "bg-pink-500 text-white"
                        : "bg-white text-gray-600 hover:bg-pink-50"
                    }`}
                    style={{ display: "block" }}
                  >
                    Th∆∞ vi·ªán
                  </Link>
                </div>
              </div>

              {/* Filters */}
              <div className="bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg p-4 mb-6">
                <h2 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
                  <Filter size={18} /> S·∫Øp x·∫øp ch·ªß ƒë·ªÅ
                </h2>
                <div className="space-y-2 text-black">
                  <label className="flex items-center cursor-pointer">
                    <input
                      type="radio"
                      name="sortOption"
                      value="newest"
                      checked={sortOption === "newest"}
                      onChange={() => setSortOption("newest")}
                      className="mr-2"
                    />
                    <Clock size={16} className="mr-2 text-gray-500" />
                    <span>M·ªõi nh·∫•t</span>
                  </label>
                  <label className="flex items-center cursor-pointer">
                    <input
                      type="radio"
                      name="sortOption"
                      value="mostViewed"
                      checked={sortOption === "mostViewed"}
                      onChange={() => setSortOption("mostViewed")}
                      className="mr-2"
                    />
                    <Eye size={16} className="mr-2 text-gray-500" />
                    <span>Xem nhi·ªÅu nh·∫•t</span>
                  </label>
                  <label className="flex items-center cursor-pointer">
                    <input
                      type="radio"
                      name="sortOption"
                      value="mostCommented"
                      checked={sortOption === "mostCommented"}
                      onChange={() => setSortOption("mostCommented")}
                      className="mr-2"
                    />
                    <MessageCircle size={16} className="mr-2 text-gray-500" />
                    <span>B√¨nh lu·∫≠n nhi·ªÅu</span>
                  </label>
                </div>
              </div>

              {/* Quick Stats or Featured Content */}
              <div className="bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg p-4">
                <h2 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
                  <TrendingUp size={18} /> Ch·ªß ƒë·ªÅ n·ªïi b·∫≠t
                </h2>
                <div className="space-y-3">
                  {threads
                    .sort((a, b) => b.likes - a.likes)
                    .slice(0, 3)
                    .map((thread) => (
                      <Link
                        key={thread.id}
                        to={`/forum/thread/${thread.id}`}
                        className="block bg-pink-50 hover:bg-pink-100 p-3 rounded-lg transition"
                      >
                        <h3 className="text-sm font-medium text-gray-800 line-clamp-2">
                          {thread.title}
                        </h3>
                        <div className="flex items-center gap-3 mt-2 text-xs text-gray-500">
                          <span className="flex items-center gap-1">
                            <Heart size={12} /> {thread.likes}
                          </span>
                          <span className="flex items-center gap-1">
                            <MessageSquare size={12} /> {thread.comments}
                          </span>
                        </div>
                      </Link>
                    ))}
                </div>
              </div>
            </aside>

            {/* Main Content Area */}
            <div className="lg:w-3/4">
              {activeTab === "categories" && (
                <>
                  {selectedCategory ? (
                    // Selected Category View with Threads
                    <div className="bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg p-6">
                      <div className="flex justify-between items-center mb-6">
                        <div>
                          <button
                            onClick={() => setSelectedCategory(null)}
                            className="text-blue-500 hover:text-blue-700 mb-2 flex items-center gap-1"
                          >
                            ‚Üê Quay l·∫°i chuy√™n m·ª•c
                          </button>
                          <div className="flex items-center gap-4 mb-4">
                            <span
                              className={`text-4xl p-4 rounded-full shadow ${selectedCategory.color}`}
                            >
                              {selectedCategory.icon}
                            </span>
                            <div>
                              <h2 className="text-3xl font-bold text-gray-800 flex items-center gap-2">
                                {selectedCategory.name}
                              </h2>
                              <p className="text-gray-600 text-lg">
                                {selectedCategory.description}
                              </p>
                              <div className="flex gap-4 mt-2 text-sm text-gray-500">
                                <span>
                                  {getThreadCount(selectedCategory.name)} ch·ªß ƒë·ªÅ
                                </span>
                                {/* C√≥ th·ªÉ th√™m s·ªë l∆∞·ª£ng b√†i vi·∫øt n·∫øu c√≥ */}
                              </div>
                            </div>
                          </div>
                        </div>
                        <button
                          onClick={() => setShowNewThreadModal(true)}
                          className="bg-pink-500 hover:bg-pink-600 text-white px-4 py-2 rounded-full flex items-center gap-2"
                        >
                          <PlusCircle size={18} />
                          <span>T·∫°o ch·ªß ƒë·ªÅ m·ªõi</span>
                        </button>
                      </div>

                      <div className="space-y-4">
                        <AnimatePresence>
                          {sortedThreads
                            .filter(
                              (thread) =>
                                thread.category === selectedCategory.name
                            )
                            .map((thread) => (
                              <motion.div
                                key={thread.id}
                                variants={cardVariants}
                                initial="hidden"
                                animate="visible"
                                exit="exit"
                                transition={{ duration: 0.3 }}
                                className="bg-white rounded-xl border border-gray-100 shadow-sm hover:shadow-md transition-shadow overflow-hidden"
                              >
                                <div className="p-4">
                                  <div className="flex justify-between items-start">
                                    <div className="flex items-center gap-3">
                                      <img
                                        src={thread.author.avatar}
                                        alt={thread.author.name}
                                        className="w-10 h-10 rounded-full object-cover"
                                      />
                                      <div>
                                        <h3 className="text-sm font-medium text-gray-500">
                                          {thread.author.name}
                                        </h3>
                                        <p className="text-xs text-gray-400">
                                          {formatDate(thread.createdAt)}
                                        </p>
                                      </div>
                                    </div>
                                    {thread.isPinned && (
                                      <span className="bg-yellow-100 text-yellow-600 text-xs px-2 py-1 rounded-full">
                                        Ghim
                                      </span>
                                    )}
                                  </div>
                                  <Link
                                    to={`/forum/thread/${thread.id}`}
                                    className="block mt-3"
                                  >
                                    <h2 className="text-lg font-semibold text-gray-800 hover:text-pink-600 transition">
                                      {thread.title}
                                    </h2>
                                    <p className="text-gray-600 text-sm mt-2 line-clamp-2">
                                      {thread.content}
                                    </p>
                                  </Link>
                                  <div className="flex items-center gap-4 mt-4 text-sm text-gray-500">
                                    <span className="flex items-center gap-1">
                                      <Eye size={16} /> {thread.views}
                                    </span>
                                    <span className="flex items-center gap-1">
                                      <Heart size={16} /> {thread.likes}
                                    </span>
                                    <span className="flex items-center gap-1">
                                      <MessageSquare size={16} />{" "}
                                      {thread.comments}
                                    </span>
                                  </div>
                                </div>
                              </motion.div>
                            ))}
                        </AnimatePresence>
                      </div>
                    </div>
                  ) : (
                    // Categories List View
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <AnimatePresence>
                        {categories.map((category) => (
                          <motion.div
                            key={category.id}
                            variants={cardVariants}
                            initial="hidden"
                            animate="visible"
                            exit="exit"
                            transition={{ duration: 0.3 }}
                            className={`relative bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg hover:shadow-2xl transition-shadow overflow-hidden cursor-pointer border-2 border-transparent hover:border-pink-400 group`}
                          >
                            <div className="p-5 flex flex-col h-full">
                              <div className="flex items-center gap-4 mb-3">
                                <span
                                  className={`text-3xl p-3 rounded-full shadow ${category.color} transition-transform group-hover:scale-110`}
                                >
                                  {category.icon}
                                </span>
                                <div>
                                  <h3 className="text-xl font-bold text-gray-800 group-hover:text-pink-600 transition">
                                    {category.name}
                                  </h3>
                                  <div className="flex justify-between items-center">
                                    <span className="text-gray-500 text-sm">
                                      {getThreadCount(category.name)} ch·ªß ƒë·ªÅ
                                    </span>
                                  </div>
                                </div>
                              </div>
                              <div className="flex  items-center">
                                <p className="text-gray-600 justify-start truncate text-sm flex-1 group-hover:text-gray-800 transition">
                                  {category.description}
                                </p>
                                <button
                                  className="text-pink-500 justify-end hover:text-pink-700 text-sm font-medium"
                                  onClick={(e) => {
                                    e.stopPropagation();
                                    setSelectedCategory(category);
                                  }}
                                >
                                  Xem t·∫•t c·∫£ ‚Üí
                                </button>
                              </div>
                            </div>
                          </motion.div>
                        ))}
                      </AnimatePresence>
                    </div>
                  )}
                </>
              )}

              {activeTab === "experts" && (
                <div className="bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg p-6">
                  <h2 className="text-2xl font-bold text-gray-800 mb-6">
                    H·ªèi ƒë√°p c√πng chuy√™n gia
                  </h2>

                  {/* Expert Profiles */}
                  <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8">
                    {experts.map((expert) => (
                      <div
                        key={expert.id}
                        className="bg-white rounded-xl p-4 shadow-sm border border-gray-100"
                      >
                        <div className="flex flex-col items-center text-center">
                          <img
                            src={expert.avatar}
                            alt={expert.name}
                            className="w-20 h-20 rounded-full object-cover mb-3"
                          />
                          <h3 className="font-semibold text-gray-800">
                            {expert.name}
                          </h3>
                          <p className="text-pink-600 text-sm mb-1">
                            {expert.specialty}
                          </p>
                          <p className="text-gray-500 text-xs">
                            {expert.experience}
                          </p>
                          <button className="mt-3 bg-blue-500 hover:bg-blue-600 text-white text-sm px-4 py-1.5 rounded-full">
                            G·ª≠i c√¢u h·ªèi
                          </button>
                        </div>
                      </div>
                    ))}
                  </div>

                  {/* Ask Question Form */}
                  <div className="bg-blue-50 rounded-xl p-6 mb-6">
                    <h3 className="text-xl font-semibold text-blue-800 mb-4">
                      ƒê·∫∑t c√¢u h·ªèi cho chuy√™n gia
                    </h3>
                    <form>
                      <div className="mb-4">
                        <label className="block text-gray-700 text-sm font-medium mb-2">
                          Ch·ªçn chuy√™n gia
                        </label>
                        <select className="w-full p-3 text-black bg-white border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-300 focus:border-blue-300 outline-none">
                          <option value="">Ch·ªçn chuy√™n gia ph√π h·ª£p</option>
                          {experts.map((expert) => (
                            <option key={expert.id} value={expert.id}>
                              {expert.name} - {expert.specialty}
                            </option>
                          ))}
                        </select>
                      </div>
                      <div className="mb-4">
                        <label className="block text-gray-700 text-sm font-medium mb-2">
                          Ti√™u ƒë·ªÅ c√¢u h·ªèi
                        </label>
                        <input
                          type="text"
                          className="w-full p-3 bg-white border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-300 focus:border-blue-300 outline-none"
                          placeholder="Nh·∫≠p ti√™u ƒë·ªÅ ng·∫Øn g·ªçn"
                        />
                      </div>
                      <div className="mb-4">
                        <label className="block text-gray-700 text-sm font-medium mb-2">
                          N·ªôi dung chi ti·∫øt
                        </label>
                        <textarea
                          className="w-full p-3 bg-white border border-gray-200 rounded-lg h-32 focus:ring-2 focus:ring-blue-300 focus:border-blue-300 outline-none"
                          placeholder="M√¥ t·∫£ chi ti·∫øt c√¢u h·ªèi c·ªßa b·∫°n"
                        ></textarea>
                      </div>
                      <button
                        type="submit"
                        className="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-6 rounded-lg"
                      >
                        G·ª≠i c√¢u h·ªèi
                      </button>
                    </form>
                  </div>

                  {/* Previous Q&A */}
                  <h3 className="text-xl font-semibold text-gray-800 mb-4">
                    C√¢u h·ªèi ƒë∆∞·ª£c tr·∫£ l·ªùi g·∫ßn ƒë√¢y
                  </h3>
                  <div className="space-y-4">
                    {threads.slice(0, 3).map((thread) => (
                      <div
                        key={thread.id}
                        className="bg-white rounded-xl border border-gray-100 shadow-sm p-4"
                      >
                        <div className="flex gap-3">
                          <span className="bg-blue-100 text-blue-600 h-8 w-8 flex items-center justify-center rounded-full font-semibold">
                            Q
                          </span>
                          <div>
                            <h4 className="font-medium text-gray-800">
                              {thread.title}
                            </h4>
                            <p className="text-gray-500 text-sm">
                              {thread.author.name} ‚Ä¢{" "}
                              {formatDate(thread.createdAt)}
                            </p>
                            <p className="text-gray-600 text-sm mt-1">
                              {thread.content}
                            </p>
                            <div className="flex items-center gap-3 mt-2 text-xs text-gray-500">
                              <span className="flex items-center gap-1">
                                <Eye size={12} /> {thread.views}
                              </span>
                              <span className="flex items-center gap-1">
                                <Heart size={12} /> {thread.likes}
                              </span>
                              <span className="flex items-center gap-1">
                                <MessageSquare size={12} /> {thread.comments}
                              </span>

                              <Link
                                to={`/forum/thread/${thread.id}`}
                                className="text-blue-500 hover:text-blue-700"
                              >
                                Xem th√™m
                              </Link>
                            </div>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              )}
              {activeTab === "library" && (
                <div className="bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg p-6">
                  <h2 className="text-2xl font-bold text-gray-800 mb-6">
                    Th∆∞ vi·ªán t√†i li·ªáu
                  </h2>
                  <p className="text-gray-600 mb-4">
                    T√†i li·ªáu h·ªØu √≠ch cho m·∫π v√† b√©
                  </p>
                  {/* Add your library content here */}
                </div>
              )}
            </div>
          </div>
        </div>
      </section>

      {/* New Thread Modal */}
      <AnimatePresence>
        {showNewThreadModal && (
          <motion.div
            className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
          >
            <div className="bg-white rounded-lg shadow-lg p-6 w-full max-w-md mx-auto">
              <h2 className="text-xl font-bold text-gray-800 mb-4">
                T·∫°o ch·ªß ƒë·ªÅ m·ªõi
              </h2>
              <form>
                <div className="mb-4">
                  <label className="block text-gray-700 text-sm font-medium mb-2">
                    Ti√™u ƒë·ªÅ
                  </label>
                  <input
                    type="text"
                    className="w-full p-3 bg-white border border-gray-200 rounded-lg focus:ring-2 focus:ring-pink-300 focus:border-pink-300 outline-none"
                    placeholder="Nh·∫≠p ti√™u ƒë·ªÅ c·ªßa b·∫°n"
                  />
                </div>
                <div className="mb-4">
                  <label className="block text-gray-700 text-sm font-medium mb-2">
                    N·ªôi dung
                  </label>
                  <textarea
                    className="w-full p-3 bg-white border border-gray-200 rounded-lg h-32 focus:ring-2 focus:ring-pink-300 focus:border-pink-300 outline-none"
                    placeholder="Nh·∫≠p n·ªôi dung c·ªßa b·∫°n"
                  ></textarea>
                </div>
                <button
                  type="submit"
                  className="bg-pink-500 hover:bg-pink-600 text-white font-medium py-2 px-6 rounded-lg"
                >
                  G·ª≠i ch·ªß ƒë·ªÅ
                </button>
                <button
                  type="button"
                  onClick={() => setShowNewThreadModal(false)}
                  className="ml-4 bg-gray-300 hover:bg-gray-400 text-gray-800 font-medium py-2 px-6 rounded-lg"
                >
                  ƒê√≥ng
                </button>
              </form>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  );
};
export default Forum;
